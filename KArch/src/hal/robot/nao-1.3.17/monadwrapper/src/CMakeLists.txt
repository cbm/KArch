##############################
#
# WELCOME
#
# This is the main cmake configuration file
# associated with your project
# You can define specific compilation options here
#
# More about cmake : www.cmake.org

# This file was generated by Aldebaran Robotics ModuleGenerator


############################ PROJECT NAME
PROJECT( MONADWRAPPER )




############################ DEFINITION
# Add definitions needed here
ADD_DEFINITIONS( ${ALCOMMON_DEFINITIONS} ${PTHREAD_DEFINITIONS} ${TINYXML_DEFINITIONS} ${BOOST_DEFINITIONS})




############################ INCLUDE DIRECTORY
# Define include directories here
INCLUDE_DIRECTORIES( ${PROXIES_INCLUDE_DIR} ${ALCOMMON_INCLUDE_DIR} ${PTHREAD_INCLUDE_DIR}  ${TINYXML_INCLUDE_DIR}  ${BOOST_INCLUDE_DIR})




############################ PROJECT SOURCES FILES
# Add source files needed to compile this project
SET(MONADWRAPPER_SRCS

#<FILES> don't remove this comment
talws.cpp talws.h 
#</FILES> don't remove this comment

    monadwrapper.cpp monadwrapper.h
  )



############################ CHECK LIBRARY / EXECUTABLE OPTION

IF( MONADWRAPPER_IS_REMOTE STREQUAL "OFF" )
    MESSAGE( STATUS "monadwrapper is compiled as a dynamic object" )
    ADD_LIBRARY( monadwrapper SHARED ${MONADWRAPPER_SRCS} )
ELSE( MONADWRAPPER_IS_REMOTE STREQUAL "OFF" )
    MESSAGE( STATUS "monadwrapper is compiled as a remote object" )
    ADD_EXECUTABLE( monadwrapper ${MONADWRAPPER_SRCS} )
ENDIF( MONADWRAPPER_IS_REMOTE STREQUAL "OFF" )




############################ SET LIBRARIES TO LINK WITH
TARGET_LINK_LIBRARIES( monadwrapper GenLinux ${ModuleLibraries} ${TargetLinkLibraries} tinyxml 
        ${ALCOMMON_LIBRARIES} ${PTHREAD_LIBRARIES} ${NEWMAT_LIBRARIES}  ${TINYXML_LIBRARIES} ${BOOST_LIBRARIES}
        )
install ( TARGETS monadwrapper 
            RUNTIME DESTINATION   bin
            LIBRARY DESTINATION   lib
            ARCHIVE DESTINATION   lib/static )

############################ BINARY COPY
# copy binaries in the output folder automatically
GET_TARGET_PROPERTY( MONADWRAPPER_LOCATION monadwrapper LOCATION)


IF ( WIN32 )
    STRING(REGEX REPLACE "monadwrapper.dll" "" MONADWRAPPER_LOCATION_SRC ${MONADWRAPPER_LOCATION})
    SET (OUTPUT_ROOT_DIR_LIB ${AL_DIR}/modules/lib/ )
    FILE(TO_NATIVE_PATH ${MONADWRAPPER_LOCATION_SRC} MONADWRAPPER_LOCATION_SRC)
    FILE(TO_NATIVE_PATH ${OUTPUT_ROOT_DIR_LIB} OUTPUT_ROOT_DIR_LIB)
ENDIF ( WIN32 )


IF( MONADWRAPPER_IS_REMOTE STREQUAL "OFF" )

IF (WIN32)
	  ADD_CUSTOM_COMMAND(
	    TARGET monadwrapper
	    POST_BUILD
	    COMMAND echo ${MONADWRAPPER_LOCATION_SRC}*
    	    COMMAND echo ${OUTPUT_ROOT_DIR_LIB}
	    COMMAND xcopy  ${MONADWRAPPER_LOCATION_SRC}*.dll ${OUTPUT_ROOT_DIR_LIB} /Y /C
	  )
ELSE (WIN32)

  ADD_CUSTOM_COMMAND(
    TARGET monadwrapper
    POST_BUILD
    COMMAND ${CMAKE_COMMAND}
    ARGS -E copy
    ${MONADWRAPPER_LOCATION}
    ${OUTPUT_ROOT_DIR_LIB}
  )
 ENDIF (WIN32)
 ELSE( MONADWRAPPER_IS_REMOTE STREQUAL "OFF" )
  ADD_CUSTOM_COMMAND(
    TARGET monadwrapper
    POST_BUILD
    COMMAND ${CMAKE_COMMAND}
    ARGS -E copy
    ${MONADWRAPPER_LOCATION}
    ${OUTPUT_ROOT_DIR_EXE}
  )
ENDIF( MONADWRAPPER_IS_REMOTE STREQUAL "OFF" )



