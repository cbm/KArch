message ( STATUS "" )
message ( STATUS " _..::: Configuring Activities :::.._ " )
message ( STATUS "" )

#______________________________________________________________________
# Select build type for user Activities. User Activities can be build as an
# archive static library ( STATIC option ), as a dynamically loaded
# library ( SHARED option ) or as a run-time dynamically loaded library 
# ( MODULE option ).

set ( ActivityBuildType SHARED CACHE STRING 
        "Choose build type for user Activities. Available options are STATIC, SHARED and MODULE" )

if ( "x${ActivityBuildType}x" STREQUAL "xx" )
  message ( FATAL_ERROR "ActivityBuildType is not set!" )
elseif ( (NOT "${ActivityBuildType}" STREQUAL "STATIC") AND
         (NOT "${ActivityBuildType}" STREQUAL "SHARED") AND
         (NOT "${ActivityBuildType}" STREQUAL "MODULE") )
  message ( FATAL_ERROR "ActivityBuildType should be one of the following: STATIC, SHARED or MODULE" )
endif ( "x${ActivityBuildType}x" STREQUAL "xx" )



#________________________________________________________________
# Write activity registry file in case of static module building,
# else create an empty file because the file is always included
# by the architecture

if ( "${ActivityBuildType}" STREQUAL "STATIC" )
    file ( WRITE  activityRegistry.h   "/*************************************************************  \n" )
    file ( APPEND activityRegistry.h   "****** WARNING AUTOGENERATED FILE - DO NOT EDIT MANUALLY *****  \n" )
    file ( APPEND activityRegistry.h   "*************************************************************/  \n" )
else( "${ActivityBuildType}" STREQUAL "STATIC" )
    file ( WRITE  activityRegistry.h   "/*************************************************************  \n" )
    file ( APPEND activityRegistry.h   "********* WARNING AUTOGENERATED FILE - DO NOT DELETE *********  \n" )
    file ( APPEND activityRegistry.h   "*************************************************************/  \n" )
endif ( "${ActivityBuildType}" STREQUAL "STATIC" )



#___________________________________________________________
# Autodetect user Activitys and add them to the building tree.

file ( GLOB FilesInDir . * )

foreach ( afile ${FilesInDir} )
    if ( IS_DIRECTORY ${afile} )
        set ( theSubDirs ${theSubDirs}  ${afile}  )
        message ( STATUS "Activity ${afile} detected and added to the building tree" )
    endif ( IS_DIRECTORY ${afile} )
endforeach ( afile )


foreach ( subdir ${theSubDirs} )
    add_subdirectory( ${subdir} )
endforeach ( subdir ${theSubDirs} )


#________________________________________________________
# Back propagate TargetLinkLibraries variable in order to 
# make available the library names to the linker. This is 
# needed in both STATIC and SHARED built Activities but not 
# for "MODULE" Activities.

if ( ("${ActivityBuildType}" STREQUAL "STATIC") OR 
        ("${ActivityBuildType}" STREQUAL "SHARED") )

    set ( ActivityLibraries ${ActivityLibraries} PARENT_SCOPE)

endif ( ("${ActivityBuildType}" STREQUAL "STATIC") OR 
        ("${ActivityBuildType}" STREQUAL "SHARED") )

